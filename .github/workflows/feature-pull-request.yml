name: "Pull request"

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - synchronize

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
  KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
  GRADLE_ENCRYPTION_KEY: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
  UT_EXEC_DATA_CACHE_KEY: unit-tests-exec-data-${{github.event.pull_request.number}}
  IT_EXEC_DATA_CACHE_KEY: instrumented-tests-exec-data-${{github.event.pull_request.number}}

jobs:
  build:
    name: "Build application"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up development tools"
        uses: ./.github/actions/setup-dev-tools-action

      - name: "Assemble application"
        shell: bash
        run: ./gradlew assemble

  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up development tools"
        uses: ./.github/actions/setup-dev-tools-action

      - name: "Run unit tests"
        uses: ./.github/actions/run-unit-tests-action
        with:
          exec-data-cache-key: ${{ env.UT_EXEC_DATA_CACHE_KEY }}

  instrumented-tests:
    name: "Instrumented tests"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up development tools"
        uses: ./.github/actions/setup-dev-tools-action

      - name: "Run instrumented tests"
        uses: ./.github/actions/run-instrumented-tests-action
        with:
          avd-api-level: 35
          avd-target: default
          exec-data-cache-key: ${{ env.IT_EXEC_DATA_CACHE_KEY }}

  code-quality:
    name: "Verify code quality"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - unit-tests
      - instrumented-tests
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up development tools"
        uses: ./.github/actions/setup-dev-tools-action

      - name: "Check Gradle project health"
        shell: bash
        run: ./gradlew projectHealth

      - name: "Detekt"
        shell: bash
        run: ./gradlew detekt

      - name: "Restore unit test execution data"
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/unit-tests
          key: ${{ env.UT_EXEC_DATA_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: "Restore instrumented test execution data"
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/instrumented-tests
          key: ${{ env.IT_EXEC_DATA_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: "Code coverage"
        uses: ./.github/actions/code-coverage-action

      - name: "Clear caches"
        continue-on-error: true
        shell: bash
        run: |
          gh cache delete "$UT_EXEC_DATA_CACHE_KEY"
          gh cache delete "$IT_EXEC_DATA_CACHE_KEY"

  dependencies-update-auto-merge:
    name: "Auto merge on dependencies update"
    runs-on: ubuntu-latest
    if: startsWith(github.head_ref, 'dependabot/') || startsWith(github.head_ref, 'wrapperbot/')
    needs:
      - code-quality
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Auto-merge PR"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
        shell: bash
        run: gh pr merge --auto --squash $PR_URL
