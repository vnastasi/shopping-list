name: Pull request

on:
  pull_request:
    branches:
      - "main"
    types:
      - opened
      - synchronize

permissions:
  contents: write
  pull-requests: write

env:
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
  KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
  KEYSTORE_KEY_ALIAS: ${{ secrets.KEYSTORE_KEY_ALIAS }}
  KEYSTORE_KEY_PASSWORD: ${{ secrets.KEYSTORE_KEY_PASSWORD }}
  UT_EXEC_DATA_CACHE_KEY: unit-tests-exec-data-${{github.event.pull_request.number}}
  IT_EXEC_DATA_CACHE_KEY: instrumented-tests-exec-data-${{github.event.pull_request.number}}

jobs:
  build:
    name: "Build application"
    runs-on: ubuntu-latest
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: "Set up Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Assemble application"
        run: ./gradlew assemble

  unit-tests:
    name: "Unit tests"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: "Set up Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Assemble unit tests"
        run: ./gradlew assembleDebugUnitTest

      - name: "Run unit tests"
        run: |
          ./gradlew testDebugUnitTest
          ./gradlew copyUnitTestExecData

      - name: "Clear any previously cached execution data"
        continue-on-error: true
        run: gh cache delete "$UT_EXEC_DATA_CACHE_KEY"

      - name: "Cache test execution data"
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/unit-tests
          key: ${{ env.UT_EXEC_DATA_CACHE_KEY }}

  instrumented-tests:
    name: "Instrumented tests"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - build
    strategy:
      matrix:
        api-level: [35]
        target: [default]
    steps:
      - name: "Enable hardware acceleration"
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: "Set up Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Assemble instrumented tests"
        run: ./gradlew assembleDebugAndroidTest

      - name: "Restore emulator snapshots"
        uses: actions/cache@v4
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}-${{ matrix.target }}

      - name: "Run instrumented tests"
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: ${{ matrix.target }}
          arch: x86_64
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: |
            ./gradlew connectedDebugAndroidTest -Pandroid.testInstrumentationRunnerArguments.class=md.vnastasi.shoppinglist.suite.AllSuite
            ./gradlew copyInstrumentedTestExecData

      - name: "Clear any previously cached execution data"
        continue-on-error: true
        run: gh cache delete "$IT_EXEC_DATA_CACHE_KEY"

      - name: "Cache test execution data"
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/instrumented-tests
          key: ${{ env.IT_EXEC_DATA_CACHE_KEY }}

  code-quality:
    name: "Verify code quality"
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - unit-tests
      - instrumented-tests
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Set up Java"
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"

      - name: "Set up Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}

      - name: "Check Gradle project health"
        run: ./gradlew projectHealth

      - name: "Restore unit test execution data"
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/unit-tests
          key: ${{ env.UT_EXEC_DATA_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: "Restore instrumented test execution data"
        uses: actions/cache/restore@v4
        with:
          path: ${{ github.workspace }}/build/exec-data/instrumented-tests
          key: ${{ env.IT_EXEC_DATA_CACHE_KEY }}
          fail-on-cache-miss: true

      - name: "Compile sources"
        run: |
          ./gradlew compileDebugSources
          ./gradlew compileDebugUnitTestSources
          ./gradlew compileDebugAndroidTestSources

      - name: "Code coverage"
        run: ./gradlew verifyCodeCoverage

      - name: "Detekt"
        run: ./gradlew detekt

      - name: "Clear caches"
        continue-on-error: true
        run: |
          gh cache delete "$UT_EXEC_DATA_CACHE_KEY"
          gh cache delete "$IT_EXEC_DATA_CACHE_KEY"

  dependencies-update-auto-merge:
    name: "Auto merge on dependencies update"
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref_name, 'dependabot/') }}
    needs:
      - code-quality
    steps:
      - name: "Check out repository"
        uses: actions/checkout@v5.0.0

      - name: "Auto-merge PR"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
        run: gh pr merge --auto --squash $PR_URL
